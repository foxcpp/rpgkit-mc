plugins {
    id 'fabric-loom' version '1.1-SNAPSHOT' apply false
}

def getDate() {
    return new Date().format('yyyy.MM.dd')
}

allprojects {
    group = "com.github.foxcpp.rpgkitmc"
    version = "0.1." + getDate()

    apply plugin: 'fabric-loom'

    repositories {
        maven { url 'https://maven.ladysnake.org/releases' }
        maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
        maven { url "https://maven.shedaniel.me/" }
        maven { url "https://maven.terraformersmc.com/releases/" }
        maven { url 'https://maven.kosmx.dev/' }
        maven { url 'https://maven.nucleoid.xyz/' }
        maven { url 'https://api.modrinth.com/maven' }
    }

    dependencies {
        minecraft "com.mojang:minecraft:1.19.2"
        mappings "net.fabricmc:yarn:1.19.2+build.28:v2"
        modImplementation "net.fabricmc:fabric-loader:0.14.19"
        modImplementation "net.fabricmc.fabric-api:fabric-api:0.76.0+1.19.2"

        modImplementation 'software.bernie.geckolib:geckolib-fabric-1.19:3.1.40'

        modImplementation "dev.emi:trinkets:3.4.1"

        modApi("me.shedaniel.cloth:cloth-config-fabric:8.2.88") {
            exclude(group: "net.fabricmc.fabric-api")
            exclude(group: "net.fabricmc")
        }
        include modImplementation("dev.kosmx.player-anim:player-animation-lib-fabric:1.0.2")
        modImplementation "maven.modrinth:better-combat:1.6.2+1.19-fabric"

        modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-chunk:5.0.2"
        modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:5.0.2"
        include "dev.onyxstudios.cardinal-components-api:cardinal-components-chunk:5.0.2"
        include "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:5.0.2"

        modImplementation "maven.modrinth:playerex:3.5.3"
        modImplementation "maven.modrinth:data-attributes:1.4.5+1.19.2"

        modImplementation "maven.modrinth:offline-player-cache:0.6.4"
        include "maven.modrinth:offline-player-cache:0.6.4"

        modImplementation(include("eu.pb4:placeholder-api:2.0.0-pre.1+1.19.2"))

        implementation group: 'net.objecthunter', name: 'exp4j', version: '0.4.8'
    }

    processResources {
        inputs.property "version", project.version

        filteringCharset "UTF-8"

        filesMatching("fabric.mod.json") {
            expand "version": project.version
        }
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = "UTF-8"
        it.options.release = 17
    }

    java {
        if (JavaVersion.current() < JavaVersion.toVersion(17)) {
            toolchain.languageVersion = JavaLanguageVersion.of(17)
        }
        withSourcesJar()
    }

    tasks.withType(AbstractArchiveTask).configureEach {
        preserveFileTimestamps = false
        reproducibleFileOrder = true
    }

    tasks.withType(GenerateModuleMetadata).configureEach {
        enabled = false
    }


    jar {
        from("LICENSE") {
            rename { "${it}_rpgkit" }
        }
    }
}

subprojects {
    version = rootProject.version
    javadoc.enabled = false

    afterEvaluate {
        // Disable the gen sources task on sub projects
        genSourcesWithFernFlower.enabled = false
        genSourcesWithCfr.enabled = false
        unpickJar.enabled = false
    }
}
subprojects.each { remapJar.dependsOn("${it.path}:remapJar") }

dependencies {
    afterEvaluate {
        subprojects.each {
            api project(path: ":${it.name}", configuration: "namedElements")
            include project("${it.name}:")
        }
    }
}
